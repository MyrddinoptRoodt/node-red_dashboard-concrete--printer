"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TypeSchemaBase = exports.FieldCategory = void 0;
/**
 * @module node-opcua-factory
 */
const node_opcua_assert_1 = require("node-opcua-assert");
var FieldCategory;
(function (FieldCategory) {
    FieldCategory["enumeration"] = "enumeration";
    FieldCategory["complex"] = "complex";
    FieldCategory["basic"] = "basic";
})(FieldCategory = exports.FieldCategory || (exports.FieldCategory = {}));
/**
 * @class TypeSchemaBase
 * @param options {Object}
 * @constructor
 * create a new type Schema
 */
class TypeSchemaBase {
    constructor(options) {
        (0, node_opcua_assert_1.assert)(options.category !== null);
        this.encode = options.encode || undefined;
        this.decode = options.decode || undefined;
        this.coerce = options.coerce;
        this.category = options.category || FieldCategory.basic;
        this.name = options.name;
        for (const prop in options) {
            if (Object.prototype.hasOwnProperty.call(options, prop)) {
                this[prop] = options[prop];
            }
        }
    }
    /**
     * @method  computer_default_value
     * @param defaultValue {*} the default value
     * @return {*}
     */
    computer_default_value(defaultValue) {
        if (defaultValue === undefined) {
            defaultValue = this.defaultValue;
        }
        if (typeof defaultValue === "function") {
            // be careful not to cache this value , it must be call each time to make sure
            // we do not end up with the same value/instance twice.
            defaultValue = defaultValue();
        }
        return defaultValue;
    }
}
exports.TypeSchemaBase = TypeSchemaBase;
//# sourceMappingURL=types.js.map