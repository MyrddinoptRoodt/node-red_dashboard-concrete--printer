import { Variant, VariantLike } from "node-opcua-variant";
import { CallbackT, StatusCode } from "node-opcua-status-code";
import { HistoryReadResult, ReadAtTimeDetails, ReadEventDetails, ReadProcessedDetails, ReadRawModifiedDetails } from "node-opcua-types";
import { NumericRange } from "node-opcua-numeric-range";
import { QualifiedNameLike } from "node-opcua-data-model";
import { DataValue } from "node-opcua-data-value";
import { UAVariable } from "./ua_variable";
import { ContinuationData, ISessionContext } from "./session_context";
export declare type VariableSetterVariation1 = (this: UAVariable, value: Variant) => StatusCode;
export declare type VariableSetterVariation2 = (this: UAVariable, value: Variant, callback: CallbackT<StatusCode>) => void;
export declare type VariableSetter = VariableSetterVariation1 | VariableSetterVariation2;
export declare type HistoryReadFunc = (context: ISessionContext, historyReadDetails: ReadRawModifiedDetails | ReadEventDetails | ReadProcessedDetails | ReadAtTimeDetails, indexRange: NumericRange | null, dataEncoding: QualifiedNameLike | null, continuationData: ContinuationData, callback: CallbackT<HistoryReadResult>) => void;
export declare type GetFunc = (this: UAVariable) => Variant;
export declare type SetFunc = VariableSetter | null;
export declare type VariableDataValueGetterSync = (this: UAVariable) => DataValue;
export declare type VariableDataValueGetterPromise = (this: UAVariable) => Promise<DataValue>;
export declare type VariableDataValueGetterCallback = (this: UAVariable, callback: CallbackT<DataValue>) => void;
export declare type VariableDataValueSetterWithCallback = (this: UAVariable, dataValue: DataValue, callback: CallbackT<StatusCode>) => void;
export declare type VariableDataValueSetterWithPromise = (this: UAVariable, dataValue: DataValue) => Promise<StatusCode>;
export declare type TimestampGetFunc = VariableDataValueGetterSync | VariableDataValueGetterPromise | VariableDataValueGetterCallback;
export declare type TimestampSetFunc = VariableDataValueSetterWithCallback | VariableDataValueSetterWithPromise;
export interface BindVariableOptionsVariation1 {
    get: GetFunc;
    set?: SetFunc;
    timestamped_get?: undefined;
    timestamped_set?: undefined;
    historyRead?: HistoryReadFunc;
}
export interface BindVariableOptionsVariation2 {
    set?: undefined;
    get?: undefined;
    timestamped_get: TimestampGetFunc;
    timestamped_set?: TimestampSetFunc;
    historyRead?: HistoryReadFunc;
}
export interface BindVariableOptionsVariation3 {
    set?: undefined;
    get?: undefined;
    timestamped_get?: undefined;
    timestamp_set?: undefined;
    refreshFunc?: (callback: CallbackT<DataValue>) => void;
    historyRead?: HistoryReadFunc;
}
export interface BindVariableOptionsVariation4 extends VariantLike {
    set?: undefined;
    get?: undefined;
    timestamped_get?: undefined;
    timestamp_set?: undefined;
    refreshFunc?: (callback: CallbackT<DataValue>) => void;
    historyRead?: HistoryReadFunc;
}
export declare type BindVariableOptions = BindVariableOptionsVariation1 | BindVariableOptionsVariation2 | BindVariableOptionsVariation3 | BindVariableOptionsVariation4;
