import { InstantiateVariableOptions, ModellingRuleType, UAMethod, UAObject, UAObjectType, UAVariable, UAVariableType } from "node-opcua-address-space-base";
import { NodeClass, AttributeIds } from "node-opcua-data-model";
import { DataValue } from "node-opcua-data-value";
import { NodeId, NodeIdLike } from "node-opcua-nodeid";
import { UInt32 } from "node-opcua-basic-types";
import { SessionContext } from "../source/session_context";
import { AddressSpacePrivate } from "./address_space_private";
import { BaseNodeImpl, InternalBaseNodeOptions } from "./base_node_impl";
import * as tools from "./tool_isSupertypeOf";
interface InstantiateS {
    propertyOf?: any;
    componentOf?: any;
    modellingRule?: ModellingRuleType;
}
export declare function topMostParentIsObjectTypeOrVariableType(addressSpace: AddressSpacePrivate, options: InstantiateS): boolean;
export interface UAVariableTypeOptions extends InternalBaseNodeOptions {
    /**  */
    valueRank?: number;
    arrayDimensions?: number[] | null;
    historizing?: boolean;
    isAbstract?: boolean;
    value?: any;
    dataType: NodeIdLike;
}
export declare class UAVariableTypeImpl extends BaseNodeImpl implements UAVariableType {
    readonly nodeClass = NodeClass.VariableType;
    get subtypeOf(): NodeId | null;
    get subtypeOfObj(): UAVariableType | null;
    isSupertypeOf: tools.IsSupertypeOfFunc<UAVariableType>;
    readonly isAbstract: boolean;
    dataType: NodeId;
    valueRank: number;
    arrayDimensions: UInt32[] | null;
    readonly minimumSamplingInterval: number;
    readonly value: any;
    historizing: boolean;
    constructor(options: UAVariableTypeOptions);
    readAttribute(context: SessionContext | null, attributeId: AttributeIds): DataValue;
    toString(): string;
    /**
     * instantiate an object of this UAVariableType
     * The instantiation takes care of object type inheritance when constructing inner properties
   
     * Note : HasComponent usage scope
     *
     * ```text
     *    Source          |     Destination
     * -------------------+---------------------------
     *  Object            | Object, Variable,Method
     *  ObjectType        |
     * -------------------+---------------------------
     *  DataVariable      | Variable
     *  DataVariableType  |
     * ```
     *
     *  see : OPCUA 1.03 page 44 $6.4 Instances of ObjectTypes and VariableTypes
     */
    instantiate(options: InstantiateVariableOptions): UAVariable;
}
export declare function assertUnusedChildBrowseName(addressSpace: AddressSpacePrivate, options: InstantiateVariableOptions): void;
export declare function initialize_properties_and_components<B extends UAObject | UAVariable | UAMethod, T extends UAVariableType | UAObjectType>(instance: B, topMostType: T, nodeType: T, copyAlsoModellingRules: boolean, optionals?: string[]): void;
export {};
