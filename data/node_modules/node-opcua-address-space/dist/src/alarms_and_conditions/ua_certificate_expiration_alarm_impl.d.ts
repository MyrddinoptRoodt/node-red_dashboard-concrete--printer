/**
 * @module node-opcua-address-space.AlarmsAndConditions
 */
import { DateTime } from "node-opcua-basic-types";
import { UACertificateExpirationAlarm_Base } from "node-opcua-nodeset-ua";
import { INamespace } from "node-opcua-address-space-base";
import { UASystemOffNormalAlarmImpl } from "./ua_system_off_normal_alarm_impl";
export interface UACertificateExpirationAlarmEx extends Omit<UACertificateExpirationAlarm_Base, "ackedState" | "activeState" | "confirmedState" | "enabledState" | "latchedState" | "limitState" | "outOfServiceState" | "shelvingState" | "silenceState" | "suppressedState"> {
}
export declare interface UACertificateExpirationAlarmImpl extends UACertificateExpirationAlarmEx, UASystemOffNormalAlarmImpl {
}
/**
 * This UACertificateExpirationAlarm (SystemOffNormalAlarmType) is raised by the Server when the Serverâ€™s
 * Certificate is within the ExpirationLimit
 * of expiration. This alarm automatically returns to normal when the certificate is updated.
 */
export declare class UACertificateExpirationAlarmImpl extends UASystemOffNormalAlarmImpl implements UACertificateExpirationAlarmEx {
    static instantiate(namespace: INamespace, options: any, data: any): UACertificateExpirationAlarmImpl;
    getExpirationDate(): DateTime;
    setExpirationDate(value: Date): void;
}
