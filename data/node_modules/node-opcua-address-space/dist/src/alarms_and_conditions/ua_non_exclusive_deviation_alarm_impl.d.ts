/**
 * @module node-opcua-address-space.AlarmsAndConditions
 */
import { DataValue } from "node-opcua-data-value";
import { NodeId } from "node-opcua-nodeid";
import { DataType } from "node-opcua-variant";
import { UANonExclusiveDeviationAlarm_Base } from "node-opcua-nodeset-ua";
import { UAVariable, UAVariableT } from "../../source";
import { NamespacePrivate } from "../namespace_private";
import { AddressSpace } from "../address_space";
import { DeviationStuff } from "./deviation_alarm_helper";
import { UANonExclusiveLimitAlarmEx, UANonExclusiveLimitAlarmImpl } from "./ua_non_exclusive_limit_alarm_impl";
export interface UANonExclusiveDeviationAlarmEx extends Omit<UANonExclusiveDeviationAlarm_Base, "ackedState" | "activeState" | "confirmedState" | "enabledState" | "latchedState" | "limitState" | "outOfServiceState" | "shelvingState" | "silenceState" | "suppressedState" | "highHighState" | "highState" | "lowState" | "lowLowState">, UANonExclusiveLimitAlarmEx, DeviationStuff {
    setpointNode: UAVariableT<NodeId, DataType.NodeId>;
    setpointNodeNode: UAVariable;
}
export declare interface UANonExclusiveDeviationAlarmImpl extends UANonExclusiveLimitAlarmImpl, UANonExclusiveDeviationAlarmEx {
    on(eventName: string, eventHandler: any): this;
    get addressSpace(): AddressSpace;
}
export declare class UANonExclusiveDeviationAlarmImpl extends UANonExclusiveLimitAlarmImpl implements UANonExclusiveDeviationAlarmEx {
    static instantiate(namespace: NamespacePrivate, type: string | NodeId, options: any, data: any): UANonExclusiveDeviationAlarmImpl;
    _setStateBasedOnInputValue(value: number): void;
    getSetpointNodeNode(): UAVariable;
    getSetpointValue(): number | null;
    _onSetpointDataValueChange(dataValue: DataValue): void;
    _install_setpoint(options: any): any;
}
