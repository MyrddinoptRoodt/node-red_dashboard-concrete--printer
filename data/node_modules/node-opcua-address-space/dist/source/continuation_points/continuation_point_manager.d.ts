import { ReferenceDescription } from "node-opcua-types";
import { IContinuationPointManager, IContinuationPointInfo, ContinuationData } from "node-opcua-address-space-base";
import { DataValue } from "node-opcua-data-value";
export declare class ContinuationPointManager implements IContinuationPointManager {
    private _map;
    constructor();
    /**
     * returns true if the current number of active continuation point has reached the limit
     * specified in maxContinuationPoint
     * @param maxBrowseContinuationPoint
     */
    hasReachedMaximum(maxContinuationPoint: number): boolean;
    clearContinuationPoints(): void;
    registerHistoryReadRaw(numValuesPerNode: number, dataValues: DataValue[], continuationData: ContinuationData): IContinuationPointInfo<DataValue>;
    getNextHistoryReadRaw(numValues: number, continuationData: ContinuationData): IContinuationPointInfo<DataValue>;
    registerReferences(maxElements: number, values: ReferenceDescription[], continuationData: ContinuationData): IContinuationPointInfo<ReferenceDescription>;
    /**
     * - releaseContinuationPoints = TRUE
     *
     *  passed continuationPoints shall be reset to free resources in
     *  the Server. The continuation points are released and the results
     *  and diagnosticInfos arrays are empty.
     *
     * - releaseContinuationPoints = FALSE
     *
     *   passed continuationPoints shall be used to get the next set of
     *   browse information
     */
    getNextReferences(numValues: number, continuationData: ContinuationData): IContinuationPointInfo<ReferenceDescription>;
    private _register;
    private _getNext;
}
