import { CallbackT } from "node-opcua-status-code";
export declare type StraightFunc<T, This> = (this: This) => T;
export declare type PromiseFunc<T, This> = (this: This) => Promise<T>;
export declare type CallbackFunc<T, This> = (this: This, callback: CallbackT<T>) => void;
export declare type MultiformFunc<T, This> = StraightFunc<T, This> | PromiseFunc<T, This> | CallbackFunc<T, This>;
export declare function convertToCallbackFunction<T, This>(func: MultiformFunc<T, This>): CallbackFunc<T, This>;
export declare type StraightFunc1<T, P, This> = (this: This, param1: P) => T;
export declare type PromiseFunc1<T, P, This> = (this: This, param1: P) => Promise<T>;
export declare type CallbackFunc1<T, P, This> = (this: This, param1: P, callback: CallbackT<T>) => void;
export declare type MultiformFunc1<T, P, This> = StraightFunc1<T, P, This> | PromiseFunc1<T, P, This> | CallbackFunc1<T, P, This>;
export declare function convertToCallbackFunction1<T, P, This>(func: MultiformFunc1<T, P, This>): CallbackFunc1<T, P, This>;
